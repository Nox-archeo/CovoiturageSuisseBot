#!/usr/bin/env python3
"""
Test des 3 corrections apport√©es aux trajets passagers
"""

import os
import sys
from pathlib import Path

# Ajouter le r√©pertoire racine au chemin Python
sys.path.insert(0, str(Path(__file__).parent))

from dotenv import load_dotenv
load_dotenv()

def test_corrections():
    """Test des corrections apport√©es"""
    print("üîß TEST DES CORRECTIONS TRAJETS PASSAGERS")
    print("=" * 50)
    
    corrections_validees = []
    
    # Test 1: V√©rifier la correction du texte de s√©lection des places
    print("\n1Ô∏è‚É£ TEST: Message de s√©lection des places")
    try:
        with open('handlers/trip_creation/passenger_trip_handler.py', 'r', encoding='utf-8') as f:
            content = f.read()
            
        if "Combien de places souhaitez-vous r√©server?" in content:
            print("‚úÖ Correction 1 valid√©e : Message corrig√© 'places √† r√©server' au lieu de 'personnes'")
            corrections_validees.append("Message s√©lection places")
        else:
            print("‚ùå Correction 1 √©chou√©e : Ancien message toujours pr√©sent")
            
    except Exception as e:
        print(f"‚ùå Erreur test 1: {e}")
    
    # Test 2: V√©rifier la correction du prix affich√© pour les passagers
    print("\n2Ô∏è‚É£ TEST: Affichage prix trajet passager")
    try:
        with open('handlers/create_trip_handler.py', 'r', encoding='utf-8') as f:
            content = f.read()
            
        if "Prix total du trajet" in content and "Prix par place" in content and "partag√© entre" in content:
            print("‚úÖ Correction 2 valid√©e : Affichage prix passager corrig√© avec logique de partage")
            corrections_validees.append("Prix trajet passager")
        else:
            print("‚ùå Correction 2 √©chou√©e : Ancien affichage prix toujours pr√©sent")
            
    except Exception as e:
        print(f"‚ùå Erreur test 2: {e}")
    
    # Test 3: V√©rifier l'ajout du handler pour les trajets passager
    print("\n3Ô∏è‚É£ TEST: Handler trajets passager ajout√©")
    try:
        with open('handlers/trip_handlers.py', 'r', encoding='utf-8') as f:
            content = f.read()
            
        if "list_passenger_trips" in content and "trips:list_passenger" in content:
            print("‚úÖ Correction 3 valid√©e : Handler trajets passager ajout√©")
            corrections_validees.append("Handler trajets passager")
        else:
            print("‚ùå Correction 3 √©chou√©e : Handler trajets passager manquant")
            
    except Exception as e:
        print(f"‚ùå Erreur test 3: {e}")
    
    # R√©sum√©
    print(f"\nüéØ R√âSUM√â DES CORRECTIONS")
    print(f"‚úÖ {len(corrections_validees)}/3 corrections valid√©es")
    
    if len(corrections_validees) == 3:
        print("\nüéâ TOUTES LES CORRECTIONS SONT APPLIQU√âES !")
        print("‚úÖ Les trajets passagers fonctionnent maintenant correctement")
        print("‚úÖ Message correct : 'places √† r√©server' au lieu de 'personnes'")
        print("‚úÖ Prix correct : prix total divis√© par nombre de places")
        print("‚úÖ Bouton 'Mes r√©servations' fonctionne maintenant")
        return True
    else:
        print(f"\n‚ö†Ô∏è {3 - len(corrections_validees)} correction(s) manquante(s)")
        return False

if __name__ == "__main__":
    success = test_corrections()
    if success:
        print(f"\n‚úÖ Toutes les corrections sont op√©rationnelles!")
    else:
        print(f"\n‚ùå Des corrections restent √† appliquer")
    
    sys.exit(0 if success else 1)
