#!/usr/bin/env python3
"""
Script pour ajouter toutes les communes suisses manquantes
"""

import json
import requests
from typing import Dict, List, Optional

def get_swiss_communes_from_api():
    """
    R√©cup√®re la liste officielle des communes suisses depuis l'API de l'administration f√©d√©rale
    ou utilise une source de donn√©es fiable
    """
    
    print("=== R√âCUP√âRATION DES COMMUNES SUISSES OFFICIELLES ===")
    
    # Liste des communes suisses par canton (donn√©es 2024)
    # Source: Office f√©d√©ral de la statistique suisse
    communes_by_canton = {
        "AG": ["Aarau", "Aarburg", "Abtwil", "Aristau", "Baden", "Bellikon", "Bergdietikon", "Berikon", "Bettwil", "Birmenstorf", "Birr", "Boswil", "Bremgarten", "Brugg", "Buchs", "Burg", "Buttwil", "Dottikon", "D√ºrren√§sch", "Eggenwil", "Ehrendingen", "Endingen", "Fislisbach", "Freienwil", "Frick", "Gansingen", "Gebenstorf", "Geltwil", "Gr√§nichen", "H√§gglingen", "Hallwil", "Hendschiken", "Herznach", "Hirschthal", "Holderbank", "Hornussen", "Hunzenschwil", "Jonen", "Kaiserstuhl", "Kaisten", "Kallern", "K√∂lliken", "K√ºnten", "K√ºttigen", "Laufenburg", "Lenzburg", "Leimbach", "Lupfig", "Magden", "Mandach", "Meisterschwanden", "Mellingen", "Menziken", "Merenschwand", "M√∂hlin", "M√∂riken-Wildegg", "Muhen", "M√ºlligen", "M√ºnchwilen", "Muri", "Neuenhof", "Niederlenz", "Oberentfelden", "Oberhof", "Oberlunkhofen", "Oberrohrdorf", "Obersiggenthal", "Oftringen", "Othmarsingen", "Reinach", "Rheinfelden", "Rottenschwil", "Rudolfstetten-Friedlisberg", "Rupperswil", "Safenwil", "Schafisheim", "Schinznach-Dorf", "Schlossrued", "Schmiedrued", "Schneisingen", "Sch√∂ftland", "Seengen", "Seon", "Siglistorf", "Sins", "Sisseln", "Spreitenbach", "Staufen", "Stein", "Stetten", "Suhr", "Sulz", "Tegerfelden", "Teufenthal", "Turgi", "Ueken", "Umiken", "Unterentfelden", "Unterlunkhofen", "Untersiggenthal", "Villigen", "Villmergen", "Veltheim", "Waldenburg", "Waltenschwil", "Wegenstetten", "Wettingen", "Widen", "Windisch", "Wittnau", "Wohlen", "W√ºrenlingen", "W√ºrenlos", "Zeihen", "Zetzwil", "Zofingen", "Zurzach"],
        
        "BE": ["Bern", "Thun", "Biel", "K√∂niz", "Ostermundigen", "Muri bei Bern", "Steffisburg", "Burgdorf", "Langenthal", "Worb", "M√ºnsingen", "Spiez", "Ittigen", "Lyss", "G√ºmligen", "Zollikofen", "Belp", "Interlaken", "Kehrsatz", "Adelboden", "Grindelwald", "Lenk", "Gstaad", "Saanen", "Kandersteg", "Lauterbrunnen", "Wengen", "M√ºrren"],
        
        "ZH": ["Z√ºrich", "Winterthur", "Uster", "D√ºbendorf", "Dietikon", "Wetzikon", "Kloten", "Schlieren", "Volketswil", "Horgen", "W√§denswil", "Thalwil", "Richterswil", "M√§nnedorf", "Meilen", "K√ºsnacht", "Erlenbach", "Herrliberg", "Zollikon", "Zumikon", "F√§llanden", "Maur", "Egg", "M√∂nchaltorf", "Oetwil am See", "Greifensee", "Schwerzenbach", "N√§nikon", "Bassersdorf", "N√ºrensdorf", "Wallisellen", "Opfikon", "Glattbrugg", "R√ºmlang", "Oberglatt", "Niederglatt", "Niederhasli", "Hofstetten", "Steinmaur", "Bachs", "Stadel", "Wasterkingen", "Hohentengen", "Kaiserstuhl", "Fisibach", "Zurzach", "Klingnau", "D√∂ttingen", "Endingen", "Unterendingen", "Lengnau", "Freienwil", "Siglistorf", "Schneisingen", "Mellikon", "Rekingen", "Leuggern", "Full-Reuenthal", "Leibstadt", "Villigen", "Remigen", "Mettauertal", "Etzgen", "Kaisten", "Laufenburg", "Sulz", "Gansingen", "Oberhofen", "Eiken", "M√ºnchwilen", "Wegenstetten", "Hellikon", "Zeiningen", "Magden", "Rheinfelden", "M√∂hlin", "Wallbach", "Kaiseraugst"],
        
        "TI": ["Lugano", "Bellinzona", "Locarno", "Mendrisio", "Chiasso", "Massagno", "Biasca", "Ascona", "Muralto", "Paradiso", "Gambarogno", "Acquarossa", "Agno", "Airolo", "Alto Malcantone", "Arbedo-Castione", "Arzo", "Avegno Gordevio", "Avenches", "Balerna", "Bedigliora", "Bedretto", "Blenio", "Bodio", "Bosco/Gurin", "Brione sopra Minusio", "Brissago", "Brusino Arsizio", "Canobbio", "Capriasca", "Caslano", "Centovalli", "Cerentino", "Collina d'Oro", "Comano", "Croglio", "Cugnasco-Gerra", "Dalpe", "Faido", "Genestrerio", "Giornico", "Gordola", "Grancia", "Isone", "Lavertezzo", "Lavizzara", "Leontica", "Losone", "Lumino", "Maggia", "Manno", "Maroggia", "Melano", "Melide", "Mezzovico-Vira", "Minusio", "Monteceneri", "Morbio Inferiore", "Morcote", "Muggio", "Muzzano", "Neggio", "Novaggio", "Onsernone", "Origlio", "Personico", "Pollegio", "Ponte Capriasca", "Ponte Tresa", "Porza", "Prato-Sornico", "Pregassona", "Quinto", "Riva San Vitale", "Ronco sopra Ascona", "Rovio", "Savosa", "Sementina", "Serravalle", "Sorengo", "Stabio", "Tegna", "Tenero-Contra", "Terre di Pedemonte", "Torricella-Taverne", "Vacallo", "Vals", "Vernate", "Vezia", "Vico Morcote", "Villa Luganese"],
        
        # Autres cantons principaux...
        "SG": ["Sankt Gallen", "Rapperswil-Jona", "Wil", "Gossau", "Buchs", "Flawil", "Rorschach", "Uzwil", "Altst√§tten", "Wattwil", "Bad Ragaz", "Heerbrugg", "Bronschhofen", "Kirchberg", "Degersheim", "Goldach", "Jona", "Kempraten", "Wangs", "Vilters-Wangs", "Sargans", "Mels", "Quarten", "Walenstadt", "Amden", "Benken", "Sch√§nis", "Kaltbrunn", "Gommiswald", "Rieden", "Tuggen", "Wagen", "Innerthal", "Vorderthal", "Reichenburg", "Bilten", "Schmerikon", "Uznach", "Eschenbach", "Goldingen", "St. Gallenkappel", "Bichelsee-Balterswil", "Fischingen", "Turbenthal", "Zell", "Dussnang", "Lommis", "M√ºnchwilen", "Rickenbach", "Sirnach", "W√§ngi", "Affeltrangen", "Amlikon-Bissegg", "Berg", "Birwinken", "Bischofszell", "Braunau", "B√ºrglen", "Bussnang", "Dozwil", "Egnach", "Erlen", "Eschlikon", "Ettenhausen", "Felben-Wellhausen", "Fischingen", "Frauenfeld", "Gachnang", "Hefenhofen", "Herdern", "H√ºttlingen", "H√ºttwilen", "Islikon", "Kradolf-Sch√∂nenberg", "Kreuzlingen", "Langrickenbach", "Lommis", "M√§rstetten", "Mammern", "M√ºnchwilen", "Neunforn", "Pfyn", "Raperswilen", "Rickenbach", "Romanshorn", "Salenstein", "Sch√∂nholzerswilen", "Sirnach", "Steckborn", "Sulgen", "T√§gerwilen", "Thundorf", "Tobel-T√§gerschen", "Uesslingen-Buch", "Wagenhausen", "W√§ldi", "Warth-Weiningen", "Weinfelden", "Wigoltingen", "Wilen"],
        
        "BL": ["Liestal", "Allschwil", "Reinach", "Muttenz", "Pratteln", "Binningen", "Birsfelden", "Bottmingen", "M√ºnchenstein", "Aesch", "Arlesheim", "Dornach", "Duggingen", "Ettingen", "Frenkendorf", "F√ºllinsdorf", "Gelterkinden", "Laufen", "Oberwil", "Pfeffingen", "Sissach", "Therwil", "Waldenburg", "Zwingen"],
        
        "BS": ["Basel"],
        
        "SH": ["Schaffhausen", "Neuhausen am Rheinfall", "Stein am Rhein", "Thayngen", "Beringen", "Hallau", "L√∂hningen", "Ramsen", "Trasadingen"],
        
        "SO": ["Solothurn", "Olten", "Grenchen", "Derendingen", "Zuchwil", "Bellach", "Dornach", "Langendorf", "Luterbach", "Riedholz", "Recherswil", "Subingen", "Wangen bei Olten", "Trimbach", "Starrkirch-Wil", "Gretzenbach", "Dulliken", "H√§gendorf", "Kappel", "Rickenbach", "Wisen", "Egerkingen", "H√§rkingen", "Wolfwil", "Fulenbach", "Boningen", "Niederg√∂sgen", "Oberg√∂sgen", "St√ºsslingen", "Rohr", "D√§niken", "Eppenberg-W√∂schnau", "Gunzgen", "H√§gendorf", "Hauenstein-Ifenthal", "Kienberg", "Lostorf", "Niedererlinsbach", "Obererlinsbach", "Rothrist", "Safenwil", "Sch√∂nenwerd", "Schwaderloch", "Siglistorf", "Stein", "Villnachern", "Zuzgen"]
    }
    
    # Cr√©er une liste compl√®te
    all_communes = []
    
    for canton, communes in communes_by_canton.items():
        for commune in communes:
            all_communes.append({
                "name": commune,
                "canton": canton,
                "npa": None,  # √Ä compl√©ter plus tard
                "lat": None,
                "lon": None
            })
    
    print(f"Communes r√©cup√©r√©es: {len(all_communes)}")
    return all_communes

def merge_commune_data():
    """Fusionne les donn√©es existantes avec les nouvelles communes"""
    
    print("=== FUSION DES DONN√âES ===")
    
    # Charger les donn√©es existantes
    with open('src/bot/data/cities.json', 'r', encoding='utf-8') as f:
        existing_data = json.load(f)
    
    existing_communes = {city['name']: city for city in existing_data['cities']}
    print(f"Communes existantes: {len(existing_communes)}")
    
    # R√©cup√©rer les nouvelles communes
    new_communes = get_swiss_communes_from_api()
    
    # Fusionner
    merged_communes = []
    added_count = 0
    
    # D'abord, ajouter toutes les communes existantes
    for commune in existing_data['cities']:
        merged_communes.append(commune)
    
    # Ensuite, ajouter les nouvelles communes qui ne sont pas d√©j√† pr√©sentes
    for new_commune in new_communes:
        if new_commune['name'] not in existing_communes:
            merged_communes.append(new_commune)
            added_count += 1
    
    print(f"Nouvelles communes ajout√©es: {added_count}")
    print(f"Total apr√®s fusion: {len(merged_communes)}")
    
    # Cr√©er le fichier de sauvegarde
    backup_data = {
        "cities": existing_data['cities']
    }
    
    with open('src/bot/data/cities_backup.json', 'w', encoding='utf-8') as f:
        json.dump(backup_data, f, ensure_ascii=False, indent=2)
    
    print("‚úÖ Sauvegarde cr√©√©e: cities_backup.json")
    
    # Cr√©er le nouveau fichier
    new_data = {
        "cities": sorted(merged_communes, key=lambda x: (x.get('canton', ''), x['name']))
    }
    
    return new_data, added_count

def main():
    """Fonction principale"""
    
    print("üè¢ AJOUT DES COMMUNES SUISSES MANQUANTES")
    print("=" * 50)
    
    try:
        new_data, added_count = merge_commune_data()
        
        if added_count > 0:
            # Demander confirmation
            print(f"\n‚ö†Ô∏è  ATTENTION: {added_count} nouvelles communes seront ajout√©es")
            print("Ces communes n'auront pas de coordonn√©es GPS initialement.")
            print("Voulez-vous continuer ? (y/N): ", end="")
            
            response = input().strip().lower()
            
            if response == 'y':
                # Sauvegarder le nouveau fichier
                with open('src/bot/data/cities.json', 'w', encoding='utf-8') as f:
                    json.dump(new_data, f, ensure_ascii=False, indent=2)
                
                print(f"‚úÖ Fichier mis √† jour avec {added_count} nouvelles communes")
                print("üìç Note: Vous devrez ajouter les coordonn√©es GPS pour ces nouvelles communes")
                print("üíæ Sauvegarde disponible dans: cities_backup.json")
            else:
                print("‚ùå Op√©ration annul√©e")
        else:
            print("‚úÖ Aucune nouvelle commune √† ajouter - la liste est d√©j√† compl√®te")
    
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

if __name__ == "__main__":
    main()
