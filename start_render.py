#!/usr/bin/env python3
"""
Script de d√©marrage pour Render avec webhook automatis√©
Ce script d√©marre le bot en mode webhook avec FastAPI pour les paiements PayPal
"""

import os
import sys
import logging
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

# Configuration du logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout)
    ]
)

logger = logging.getLogger(__name__)

def validate_environment():
    """Valide que toutes les variables d'environnement n√©cessaires sont d√©finies"""
    required_vars = [
        'TELEGRAM_BOT_TOKEN',
        'WEBHOOK_URL',
        'PAYPAL_CLIENT_ID',
        'PAYPAL_CLIENT_SECRET'
    ]
    
    missing_vars = []
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        logger.error(f"‚ùå Variables d'environnement manquantes: {', '.join(missing_vars)}")
        logger.info("üìã Variables requises:")
        logger.info("   - TELEGRAM_BOT_TOKEN: Token de votre bot Telegram")
        logger.info("   - WEBHOOK_URL: URL de votre service Render (ex: https://votre-app.onrender.com)")
        logger.info("   - PAYPAL_CLIENT_ID: ID client PayPal")
        logger.info("   - PAYPAL_CLIENT_SECRET: Secret client PayPal")
        logger.info("   - PAYPAL_WEBHOOK_ID: ID du webhook PayPal (optionnel)")
        return False
    
    return True

def main():
    """Fonction principale"""
    logger.info("üöÄ D√©marrage du bot CovoiturageSuisse en mode webhook")
    logger.info("=" * 60)
    
    # Validation de l'environnement
    if not validate_environment():
        sys.exit(1)
    
    # Affichage de la configuration
    webhook_url = os.getenv('WEBHOOK_URL')
    port = int(os.getenv('PORT', 8000))
    
    logger.info(f"üåê Webhook URL: {webhook_url}")
    logger.info(f"üîå Port: {port}")
    logger.info(f"üí≥ PayPal: {'‚úÖ Configur√©' if os.getenv('PAYPAL_CLIENT_ID') else '‚ùå Non configur√©'}")
    
    # Import et d√©marrage du serveur webhook
    try:
        logger.info("üì¶ Import du serveur webhook...")
        from webhook_bot import app
        import uvicorn
        
        logger.info("‚úÖ Serveur webhook pr√™t")
        logger.info("üéØ Points d'acc√®s:")
        logger.info(f"   - Webhook Telegram: {webhook_url}/webhook")
        logger.info(f"   - Webhook PayPal: {webhook_url}/paypal/webhook")
        logger.info(f"   - Sant√©: {webhook_url}/health")
        
        logger.info("üöÄ D√©marrage du serveur...")
        
        # D√©marrage du serveur
        uvicorn.run(
            app, 
            host="0.0.0.0", 
            port=port,
            log_level="info",
            access_log=True
        )
        
    except ImportError as e:
        logger.error(f"‚ùå Erreur d'import: {e}")
        logger.info("üí° Assurez-vous que toutes les d√©pendances sont install√©es:")
        logger.info("   pip install -r requirements.txt")
        sys.exit(1)
        
    except Exception as e:
        logger.error(f"‚ùå Erreur lors du d√©marrage: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
