#!/usr/bin/env python3
"""
Test final de cr√©ation de trajet Fribourg-D√ºdingen
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from handlers.create_trip_handler import compute_price_auto

def main():
    print("=== TEST CR√âATION TRAJET FRIBOURG ‚Üí D√úDINGEN ===")
    
    # Test avec les vrais noms de villes
    result = compute_price_auto("Fribourg", "D√ºdingen")
    
    if result[0] is None or result[1] is None:
        print("‚ùå √âchec du calcul")
        return
    
    distance, price = result
    print(f"‚úÖ Distance calcul√©e: {distance} km")
    print(f"‚úÖ Prix calcul√©: {price:.2f} CHF")
    
    # Comparaison avec l'ancien syst√®me (fallback vol d'oiseau)
    print(f"\nüìä Comparaison:")
    print(f"   Ancien prix (20.14 km): 15.10 CHF")
    print(f"   Nouveau prix ({distance} km): {price:.2f} CHF")
    print(f"   √âconomie: {15.10 - price:.2f} CHF ({((15.10 - price) / 15.10 * 100):.1f}%)")
    
    # V√©rification que le prix est dans la fourchette attendue
    expected_min = 5.0  # 7 km * 0.75 = 5.25, arrondi √† 5.00
    expected_max = 7.0  # 9 km * 0.75 = 6.75, arrondi √† 6.75
    
    if expected_min <= price <= expected_max:
        print(f"‚úÖ Prix dans la fourchette attendue ({expected_min}-{expected_max} CHF)")
    else:
        print(f"‚ö†Ô∏è Prix hors fourchette attendue ({expected_min}-{expected_max} CHF)")

if __name__ == "__main__":
    main()
