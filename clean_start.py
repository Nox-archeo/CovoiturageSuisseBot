#!/usr/bin/env python3
"""
Script de nettoyage d'urgence pour Render - √† ex√©cuter avant le bot
"""

import os
import re
import sys

def clean_env_variable(value):
    """Nettoie une variable d'environnement des caract√®res non-ASCII"""
    if not value:
        return value
    # Supprimer TOUS les caract√®res non-ASCII (0-127) et de contr√¥le  
    cleaned = re.sub(r'[^\x20-\x7E]', '', value)
    return cleaned.strip()

# Nettoyer imm√©diatement TOUTES les variables d'environnement
print("üßπ NETTOYAGE INTENSIF DES VARIABLES D'ENVIRONNEMENT")
print("=" * 60)

# Variables critiques √† nettoyer
critical_vars = [
    'TELEGRAM_BOT_TOKEN',
    'PAYPAL_CLIENT_ID', 
    'PAYPAL_CLIENT_SECRET',
    'BOT_URL',
    'WEBHOOK_URL'
]

for var_name in critical_vars:
    value = os.getenv(var_name)
    if value:
        original_len = len(value)
        cleaned_value = clean_env_variable(value)
        new_len = len(cleaned_value)
        
        if original_len != new_len:
            print(f"üîß Variable {var_name}: {original_len - new_len} caract√®res non-ASCII supprim√©s")
        
        os.environ[var_name] = cleaned_value
        print(f"‚úÖ Variable {var_name} nettoy√©e ({new_len} caract√®res)")
    else:
        print(f"‚ö†Ô∏è Variable {var_name} non d√©finie")

# Marquer l'environnement Render
os.environ['RENDER'] = 'true'
os.environ['ENVIRONMENT'] = 'production'

print("‚úÖ Toutes les variables d'environnement ont √©t√© nettoy√©es")
print("üöÄ Variables pr√™tes pour utilisation par le bot")

# Maintenant d√©marrer le bot nettoy√©
if __name__ == '__main__':
    try:
        # Importer et d√©marrer le bot apr√®s nettoyage
        print("üì¶ Import du bot principal apr√®s nettoyage...")
        from bot import main as bot_main
        print("‚úÖ Bot import√©, d√©marrage...")
        bot_main()
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
